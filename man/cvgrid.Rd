% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cvgrid.R
\name{cvgrid}
\alias{cvgrid}
\title{cross validation grid search for l1-penalized additive mixed models}
\usage{
cvgrid(y, X, rand, id, data, K = 5, se1 = FALSE, smoothInit = NULL,
  pathLength = 20, useTestRanEff = TRUE, tauMax = NULL, revPath = FALSE,
  paramOrder = NULL, epsilonAbs = 1e-04, epsilonRel = 1e-04,
  iterMax = 1000, centerZ = FALSE, verbose = 2, fileName = NULL)
}
\arguments{
\item{y}{character string denoting output variable}

\item{X}{list of fixed effect design matrices setup by l1smooth}

\item{rand}{list of random effect terms setup by randomEffects}

\item{id}{character string denoting subject id variable}

\item{data}{dataset}

\item{se1}{TRUE/FALSE if true, sets smoothing parameter to value with
maximum CV error within 1 sd of the value that minimizes CV error}

\item{smoothInit}{vector of initial smoothing parameter values}

\item{pathLength}{length of each smoothing parameter path
(evenly spaced on the log scale)}

\item{useTestRanEff}{TRUE/FALSE if true, estimates random effects with test sample}

\item{tauMax}{scalar max value to use in tau path. If NULL, set to maximum
value used for fixed effect smoothing parameters.}

\item{revPath}{TRUE/FALSE if true, estimates smoothing paths from smallest to largest}

\item{paramOrder}{order of smoothing parameters to be fit}

\item{epsilonAbs}{absolute error in ADMM (tolerance for convergence)}

\item{epsilonRel}{relative error in ADMM (tolerance for convergence)}

\item{iterMax}{maximum number of ADMM iterations}

\item{centerZ}{TRUE/FALSE If True, imposes centering constraints on random effects}

\item{verbose}{integer (0, 1, 2) amount of information printed to terminal. 0 = no information, 1 = path iteration, 2 = path iteration + fold results}

\item{saveFile}{file name for saving CV results as csv file, e.g. "CV_results". Do not include extension. If NULL, no file saved.}
}
\description{
This function runs cross-validation grid search
to estimate the smoothing parameters
}
\examples{
library(psplinesl1)
data(simData)

# setup p-spline matrices
X <- list(ps(x = "x", data = simData, 
             norder = 2, k = 1, width = 0.05,
             center = TRUE))

# setup random effect matrices
rand <- re(x = "x", id = "id", data = simData,
           randomCurves = FALSE)

# run cross validation and view results
cvOut <- cvgrid(y = "y", id = "id", X = X, rand = rand,
                  K = 5,
                  pathLength = 20,
                  data = simData)
cvOut

# fit model with all data
a1 <- admm(y = "y", X, Z = rand$Z, S = rand$S,
            tau = cvOut$smoothOpt[1],
            lambda = cvOut$smoothOpt[2:(length(X)+1)],
            rho = min(5, max(cvOut$smoothOpt)),
            data = simData)

# get and plot fitted model with confidence bands
CI <- ci(model = a1, alpha = 0.05)
plot(CI)

# extract values from ci object for custom plotting
CIpoly <- data.frame(x = c(CI[[1]]$x, rev(CI[[1]]$x)), 
                     y = c(CI[[1]]$lower, rev(CI[[1]]$upper)))

ggplot(aes(x = x, y = y), data = newDat)+
  geom_polygon(data = CIpoly, fill = "grey")+
  geom_line(aes(x = CI[[1]]$x, y = CI[[1]]$smooth))
}
\keyword{ADMM,}
\keyword{cross}
\keyword{validation}

